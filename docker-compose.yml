version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-unipath
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - unipath-network
    depends_on:
      - backend
      - chatbot

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-unipath
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - DB_HOST=mysql-unipath
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=unipath
    depends_on:
      mysql-unipath:
        condition: service_healthy
    volumes:
      - /app/node_modules
      - ./backend/csv-file:/app/csv-file
    restart: unless-stopped
    networks:
      - unipath-network

  chatbot:
    build:
      context: ./chatbot
      dockerfile: Dockerfile
    image: chatbot-be
    container_name: chatbot-be
    ports:
      - "8000:8000"
    environment:
      - BACKEND_URL=http://backend-unipath:8080
    env_file:
      - ./chatbot/.env
    command: uvicorn server:app --host 0.0.0.0 --port 8000
    restart: unless-stopped
    networks:
      - unipath-network
    depends_on:
      - backend

  mysql-unipath:
    image: mysql:8.0
    container_name: mysql-unipath
    command: --local-infile=1
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=unipath
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - unipath-network

networks:
  unipath-network:
    driver: bridge

volumes:
  mysql_data: